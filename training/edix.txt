// 直径のノードs,tからダイクストラをする。
  // 直径の性質より、cur1[u]またはcur2[u]がuに対して最大コストを持つ頂点へのコストとなる。
  vector<long long> cur1=dijkstra(s);
  vector<long long> cur2=dijkstra(t);
  for(int i=1;i<=n;i++){ //各頂点iについて最大コストを持つ頂点へのコストを調べる。
    long long ans=-1; //最大値を調べるので、ansは-1としておく。
    if(i!=s){ //iからsへのコストを調べる時、iがsである時は考えない(頂点倍加などでコストに何か追加される場合、かつ自分への遷移は認めない時、これがないと自身へ遷移しうる)
      ans=max(ans,cur1[i]);
    }
    if(i!=t){ //iからtへのコストを調べる時、sの時と同様に、iがtの時は考えない。
      ans=max(ans,cur2[i]);
      
    }
    cout<<ans<<'\n'; //iに対して最大コストを持つ頂点(s,tのいずれか)へのコストを出力
  }